version: "3.9"

services:
  adminer:
    image: adminer
    environment:
      - ADMINER_PLUGINS=enum-types
    networks:
      - twir
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-adminer.rule=Host(`adminer.twir.app`)
        - traefik.http.routers.twir-adminer.middlewares=admin-auth
        - traefik.http.services.twir-adminer.loadbalancer.server.port=8080
        - traefik.docker.network=traefik-public

  nats:
    image: nats:2.10.11-scratch
    restart: always
    command: -js -m 8222
    networks:
      - twir
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-nats.rule=Host(`nats.twir.app`)
        - traefik.http.routers.twir-nats.middlewares=admin-auth
        - traefik.http.services.twir-nats.loadbalancer.server.port=8222
        - traefik.docker.network=traefik-public

  temporal-ui:
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.21.0
    networks:
      - twir
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-temporal.rule=Host(`temporal.twir.app`)
        - traefik.http.routers.twir-temporal.middlewares=admin-auth
        - traefik.http.services.twir-temporal.loadbalancer.server.port=8080
        - traefik.docker.network=traefik-public

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./configs/postgres.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER_FILE: /run/secrets/twir_postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/twir_postgres_password
      POSTGRES_DB_FILE: /run/secrets/twir_postgres_db
    secrets:
      - twir_postgres_user
      - twir_postgres_password
      - twir_postgres_db
    networks:
      - twir
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  temporal:
    depends_on:
      - postgres
    image: twirapp/temporal:latest
    networks:
      - twir
    secrets:
      - twir_postgres_user
      - twir_postgres_password
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        kompose.volume.type: configMap
      placement:
        constraints:
          - node.role == manager

  postgres-backup:
    build:
      context: .
      dockerfile: ./tools/pg-backup/Dockerfile
    image: twirapp/postgres-backup:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  migrations:
    image: twirapp/migrations:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 30
    healthcheck:
      test: "exit 0"

  redis:
    image: bitnami/redis:latest
    volumes:
      - redis-data:/bitnami/redis/data
    networks:
      - twir
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: /opt/bitnami/scripts/redis/run.sh --protected-mode no
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  api:
    image: twirapp/api:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-api.rule=Host(`twir.app`) && PathPrefix(`/api`)
        - traefik.http.routers.twir-api.middlewares=api-stripprefix
        - traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api
        - traefik.http.services.twir-api.loadbalancer.server.port=3002
        - traefik.docker.network=traefik-public
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 1

  bots:
    image: twirapp/bots:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  giveaways:
    image: twirapp/giveaways:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 3

  parser:
    image: twirapp/parser:latest
    secrets:
      - twir_doppler_token
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      mode: replicated
      replicas: 6
      endpoint_mode: dnsrr
    networks:
      - twir

  timers:
    image: twirapp/timers:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      mode: replicated
      replicas: 6
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  scheduler:
    image: twirapp/scheduler:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  eventsub:
    image: twirapp/eventsub:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-eventsub.rule=Host(`eventsub.twir.app`)
        - traefik.http.services.twir-eventsub.loadbalancer.server.port=3003
        - traefik.docker.network=traefik-public

  eval:
    image: twirapp/eval:latest
    secrets:
      - twir_doppler_token
    deploy:
      update_config:
        parallelism: 2
      mode: replicated
      replicas: 8
      endpoint_mode: dnsrr
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    networks:
      - twir

  integrations:
    image: twirapp/integrations:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  landing:
    image: twirapp/landing:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
      - traefik-public
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      mode: replicated
      replicas: 4
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-landing.rule=Host(`twir.app`)
        - traefik.http.routers.twir-landing.middlewares=cloudflarewarp
        - traefik.http.services.twir-landing.loadbalancer.server.port=3000
        - traefik.docker.network=traefik-public

  dashboard:
    image: twirapp/dashboard:latest
    command: --gzip --brotli --threshold 500 --ignore-cache-control-paths "/sw.js,/index.html,/manifest.webmanifest,/pluginWebUpdateNotice/web_version_by_plugin.json"
    secrets:
      - twir_doppler_token
    networks:
      - twir
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-dashboard.rule=Host(`twir.app`) && PathPrefix(`/dashboard`)
        - traefik.http.routers.twir-dashboard.middlewares=dashboard-stripprefix
        - traefik.http.middlewares.dashboard-stripprefix.stripprefix.prefixes=/dashboard
        - traefik.http.services.twir-dashboard.loadbalancer.server.port=8080
        - traefik.docker.network=traefik-public

  public-page:
    image: twirapp/public-page:latest
    command: --gzip --brotli --threshold 500
    secrets:
      - twir_doppler_token
    networks:
      - twir
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-public.rule=Host(`twir.app`) && PathPrefix(`/p`)
        - traefik.http.routers.twir-public.middlewares=public-stripprefix
        - traefik.http.middlewares.public-stripprefix.stripprefix.prefixes=/p
        - traefik.http.services.twir-public.loadbalancer.server.port=8080
        - traefik.docker.network=traefik-public

  overlays:
    image: twirapp/overlays:latest
    command: --gzip --brotli --threshold 500
    networks:
      - twir
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-overlays.rule=Host(`twir.app`) && PathPrefix(`/overlays`)
        - traefik.http.routers.twir-overlays.middlewares=overlays-stripprefix
        - traefik.http.middlewares.overlays-stripprefix.stripprefix.prefixes=/overlays
        - traefik.http.services.twir-overlays.loadbalancer.server.port=8080
        - traefik.docker.network=traefik-public

  websockets:
    image: twirapp/websockets:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-websockets.rule=Host(`twir.app`) && PathPrefix(`/socket`)
        - traefik.http.routers.twir-websockets.middlewares=sockets-stripprefix
        - traefik.http.middlewares.sockets-stripprefix.stripprefix.prefixes=/socket
        - traefik.http.services.twir-websockets.loadbalancer.server.port=3004
        - traefik.docker.network=traefik-public

  tokens:
    image: twirapp/tokens:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      mode: replicated
      replicas: 4
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  emotes-cacher:
    image: twirapp/emotes-cacher:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 4

  events:
    image: twirapp/events:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 6

  ytsr:
    image: twirapp/ytsr:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 6

  tts:
    image: aculeasis/rhvoice-rest:latest
    networks:
      - twir
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 4

  discord:
    image: twirapp/discord:latest
    secrets:
      - twir_doppler_token
    networks:
      - twir
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  language-detector:
    image: ghcr.io/twirapp/language-detector:latest
    secrets:
      - twir_doppler_token
    environment:
      - APP_ENV=production
    deploy:
      update_config:
        parallelism: 1
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
    networks:
      - twir

volumes:
  postgres-data:
  redis-data:
  minio-data:


networks:
  twir:
    name: twir
    external: true
  traefik-public:
    external: true

secrets:
  twir_doppler_token:
    external: true
  twir_postgres_user:
    external: true
  twir_postgres_db:
    external: true
  twir_postgres_password:
    external: true
